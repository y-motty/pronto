<?php
/* Copyright 2013 dodat */
/*---------------------------------------------------------------------------*
 * Abstract class - Controller
 *      コントローラー基底クラス
 *---------------------------------------------------------------------------*/
namespace PR;

class Controller{

	// View Class
	private $oView_ = null;

	// Renderer
	private $bNoRender_ = false;
	private $bRendered_ = false;
	private $bAjax_ = false;

	private $sAction_ = null;
	private $sRedirectUrl_ = null;

/*---------------------------------------------------------------------------*
 * Public Methods
 *---------------------------------------------------------------------------*/
	public final function getView(){
		return $this->oView_;
	}

	public final function setView($roView){
		if(empty($roView)){
			throw new Exception(C_PR_ERR_ENOENT,SMSG('PR_E011','roView is null.'));
		}
		$this->oView_ = $roView;
	}

	public final function getRenderer(){
		if(!empty($this->oView_)) return $this->oView_->getRenderer();
		return null;
	}

	public final function noRender(){
		$this->bNoRender_ = true;
	}

	public final function ajax(){
		$this->bAjax_ = true;
		$this->bNoRender_ = true;
	}

	public function setAction($rsMethod){
		$this->sAction_ = $rsMethod;
	}

	public function setRedirect($rsUrl){
		$this->sRedirectUrl_ = $rsUrl;
		$this->bNoRender_ = true;
	}

	public function resAjax($riCode,$rsMessage,$raRes=null){
		HTTPUtil::resAjax($riCode,$rsMessage,$raRes);
		$this->bNoRender_ = true;
	}

	public final function show($roRenderer=null){
		if(($this->bNoRender_)||($this->bRendered_)) return;
		if(empty($this->oView_)) $this->oView_ = new View();
		if(!empty($roRenderer)) $this->oView_->setRenderer($roRenderer);
		$this->bRendered_ = true;
		$this->oView_->show();
	}

	public final function run(){
		$this->setView(new View());

		try{
			$this->before();
			$this->action();
			$this->show();
			$this->after();

		}catch(Exception $e){
			if($this->bRendered_) return; // 描画中・後の例外は無視
			$this->errorOccured($e);
			return;
		}
		if(!empty($this->sRedirectUrl_)) HTTPUtil::redirect($this->sRedirectUrl_);
	}

/*---------------------------------------------------------------------------*
 * Protected Methods
 *---------------------------------------------------------------------------*/
	protected function before(){
	}

	protected function action(){
		if(!empty($this->sAction_)) $this->{$this->sAction_}();
	}

	protected function after(){
	}

	protected function errorOccured($roExp){
		$code = $roExp->getCode();
		$message = $roExp->getMessage();
		if($this->bAjax_){
			$this->resAjax($code,$message);
		}else{
			$this->oView_->showError($roExp);
		}
	}
}
?>
